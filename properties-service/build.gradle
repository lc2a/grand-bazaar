buildscript {
    ext {
        springBootVersion = '1.5.1.RELEASE'
        springCloudVersion = '1.1.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
}

dependencies {
    compile 'io.springfox:springfox-swagger2:2.4.0'
    compile 'io.springfox:springfox-swagger-ui:2.4.0'
    compile 'org.apache.commons:commons-lang3:3.5'
    compile "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-amqp:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.cloud:spring-cloud-starter-sleuth:${springCloudVersion}"

    testCompile 'cglib:cglib-nodep:2.2'
    testCompile 'junit:junit:4.12'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.7'
    testCompile 'org.objenesis:objenesis:1.2'
    testCompile 'org.slf4j:slf4j-simple:1.7.25'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'

    testRuntime 'com.athaydes:spock-reports:1.2.13'
}

checkstyle {
    toolVersion = '7.5.1'
    configFile rootProject.file('checkstyle.xml')
}

pmd {
    toolVersion = '5.5.3'
    ruleSetFiles = files("ruleset.xml")
}

jacoco {
    toolVersion = "0.7.6.201602180812"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }
    }
}

test.finalizedBy([jacocoTestReport, jacocoTestCoverageVerification])
